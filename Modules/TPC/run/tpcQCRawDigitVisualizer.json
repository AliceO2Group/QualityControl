{
  "qc": {
    "config": {
      "database": {
        "implementation": "CCDB",
        "host": "ccdb-test.cern.ch:8080",
        "username": "not_applicable",
        "password": "not_applicable",
        "name": "not_applicable"
      },
      "Activity": {
        "number": "42",
        "type": "2"
      },
      "monitoring": {
        "url": "infologger:///debug?qc"
      },
      "consul": {
        "url": ""
      },
      "conditionDB": {
        "url": "ccdb-test.cern.ch:8080"
      }
    },
    "postprocessing": {
      "RawDigits": {
        "active": "true",
        "className": "o2::quality_control_modules::tpc::ClusterVisualizer",
        "moduleName": "QcTPC",
        "detectorName": "TPC",
        "dataSourceURL": "ccdb-test.cern.ch:8080",
        "timestamps_comment": [ "Put the timestamp of the corresponding file you want to look for in the timestamps array.",
                                "You can either put a timestamp for every object or leave the array empty to take the latest file from the CCDB.",
                                "An empty array to get the the latest version will be the main use case.",
                                "The array is mapped to the output objects sequentially",
                                "If you want to pick the latest file in the CCDB manually, you can use -1."
        ],
        "timestamps": [
        ],
        "lookupMetaData_comment": [ "With this array you can filter your search via meta data.",
                                    "The array is mapped sequentially to the output objects.",
                                    "If you leave only one entry in the array this is used for all objects in outputCalPadMaps and outputCalPads.",
                                    "If you want no meta data simply remove 'keys' and 'values' completely and leave only {}",
                                    "Every entry above (outputCalPads.size() + outputCalPadMaps.size()) is ignored.",
                                    "The keys and values that are set by default are only there to serve as an example."
        ],
        "lookupMetaData": [
          {
          }
        ],
        "storeMetaData_comment": "For how-to, see 'lookupMetaData_comment'.",
        "storeMetaData": [
          {
          }
        ],
        "histogramRanges_comment" : [ "nBins", "min", "max" ],
        "histogramRanges": [
          { "N_Clusters" :  [ "100",  "0", "100"    ] },
          { "N_RawDigits" : [ "100",  "0", "100"    ] },
          { "Q_Max" :       [ "200",  "0", "200"    ] },
          { "Time_Bin" :    [ "1000", "0", "100000" ] }
        ],
        "path_comment": "This is the path of the RawDigitData object that shall be visualized.",
        "path": "TPC/MO/RawDigits/RawDigitData",
        "dataType_comment": "This is the switch for 'RawDigits' or 'Clusters' task. Choose 'raw' or 'clusters'.",
        "dataType": "raw",
        "initTrigger": [
          "once"
        ],
        "updateTrigger_comment": "To trigger on a specific file being updated, use e.g. 'newobject:qcdb:TPC/Calib/Noise'",
        "updateTrigger": [
          "newobject:qcdb:TPC/MO/RawDigits/RawDigitData"
        ],
        "stopTrigger": [
          "userorcontrol"
        ]
      }
    },
    "checks":{
      "CheckForEmptyPads": {
        "active" : "true",
        "className" : "o2::quality_control_modules::tpc::CheckForEmptyPads",
        "moduleName" : "QcTPC",
        "policy" : "OnEachSeparately",
        "detectorName" : "TPC",
        "dataSource" : [{
          "type" : "PostProcessing",
          "name" : "RawDigits",
          "MOs" : ["c_ROCs_N_RawDigits_2D","c_ROCs_Q_Max_2D"]
        }],
        "stopTrigger_comment": [ "MOsNames are required for code to work, runs check of empty pads, should be the same as MOs, the MOs must be separated by comma only, no spaces" ],
        "checkParameters": {
          "mediumQualityPercentageOfWorkingPads" : "0.7",
          "badQualityPercentageOfWorkingPads" : "0.4",
          "MOsNames2D" : "c_ROCs_N_RawDigits_2D,c_ROCs_Q_Max_2D"
        }
      }
    }
  }
}
