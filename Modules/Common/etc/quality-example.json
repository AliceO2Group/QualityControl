{
  "qc": {
    "config": {
      "database": {
        "implementation": "CCDB",
        "host": "ccdb-test.cern.ch:8080",
        "username": "not_applicable",
        "password": "not_applicable",
        "name": "not_applicable"
      },
      "Activity": {
        "number": "42",
        "type": "2",
        "periodName": "LHC42x",           "": "Period name / Production tag - e.g. LHC22c, LHC22c1b_test",
        "passName": "spass",              "": "Pass type - e.g. spass, cpass1",
        "provenance": "qc",               "": "Provenance - qc or qc_mc depending whether it is normal data or monte carlo data"
      },
      "monitoring": {
        "url": "infologger:///debug?qc"
      },
      "consul": {
        "url": ""
      },
      "conditionDB": {
        "url": "ccdb-test.cern.ch:8080"
      }
    },
    "postprocessing": {
      "ExampleQualityTask": {
        "active": "true",
        "className": "o2::quality_control::postprocessing::QualityTask",
        "moduleName": "QualityControl",
        "detectorName": "TST",
        "customization": [
          {
            "name": "AggregatedQualityName",
            "value": "Aggregator/AggregatedQuality"
          },
          {
            "name": "MessageGood",
            "value": "All checks are OK"
          },
          {
            "name": "MessageMedium",
            "value": "Add bookkeeping entry"
          },
          {
            "name": "MessageBad",
            "value": "Inform XYZ on-call immediately"
          },
          {
            "name": "MessageNull",
            "value": "Some histograms are empty!!!"
          }
        ],
        "dataSources": [
          {
            "type": "repository",
            "path": "TST/QO",
            "names": [
              "Check1", "Check2", "Check3"
            ]
          },
          {
            "type": "repository",
            "path": "TST/QO/Aggregator",
            "name": "AggregatedQuality"
          }
        ],
        "initTrigger": [
          "userorcontrol"
        ],
        "updateTrigger": [
          "60 seconds"
        ],
        "stopTrigger": [
          "userorcontrol", "10 minutes"
        ]
      }
    }
  }
}
