language: cpp
matrix:
  include:
    - os: linux
      dist: xenial
      env: TOOL=clang-format
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-7
          packages:
            - clang-format-7
      compiler: clang
    - os: linux
      if: branch = master
      dist: xenial
      env: TOOL=docs
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - doxygen
            - doxygen-doc
            - doxygen-latex
            - doxygen-gui
            - graphviz
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: $GITHUB_API_TOKEN
        local_dir: build/doc/html
    - os: linux
      env: TOOL=coverage
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - lcov
      branches:
        only:
          - master
script:
  - if [[ $TOOL == "clang-format" ]] && [ "$TRAVIS_PULL_REQUEST" != "false" ]; then
    cd $TRAVIS_BUILD_DIR;
    BASE_COMMIT=$(git rev-parse $TRAVIS_BRANCH);
    COMMIT_FILES=$(git diff --name-only $BASE_COMMIT | grep -i -v LinkDef);
    RESULT_OUTPUT="$(git-clang-format-7 --commit $BASE_COMMIT --diff --binary `which clang-format-7` $COMMIT_FILES)";
    if [ "$RESULT_OUTPUT" == "no modified files to format" ] || [ "$RESULT_OUTPUT" == "clang-format did not modify any files" ] ; then
    exit 0;
    else
    echo "$RESULT_OUTPUT";
    exit 1;
    fi
    fi
  - if [[ $TOOL == "docs" ]]; then
    echo "cmake_minimum_required(VERSION 3.12)" > CMakeLists.txt-new;
    echo "cmake_policy(VERSION 3.12)" >> CMakeLists.txt-new;
    cat CMakeLists.txt | awk '/# ---- Project ----/,/# ---- End Project ----/';
    cat CMakeLists.txt | awk '/# ---- Project ----/,/# ---- End Project ----/' >> CMakeLists.txt-new;
    echo "add_subdirectory(doc)" >> CMakeLists.txt-new;
    cat CMakeLists.txt-new;
    mv CMakeLists.txt-new CMakeLists.txt;
    mkdir -p build;
    cd build;
    cmake ..;
    make doc;
    fi
  - if [[ $TOOL != "coverage" ]]; then
    mkdir -p build;
    cd build;
    cmake .. -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/installed;
    else cmake .. -DCMAKE_BUILD_TYPE=Debug; fi
  - if [[ $TOOL == "test" ]] || [[ $TOOL == "coverage" ]]; then mkdir -p build; cd build; make -j; fi
  - if [[ $TOOL == "test" ]] || [[ $TOOL == "coverage" ]]; then mkdir -p build; cd build; make test; fi
after_success:
  - if [[ $TOOL == "coverage" ]]; then cd ${TRAVIS_BUILD_DIR}/build; fi
  - if [[ $TOOL == "coverage" ]]; then lcov --directory . --capture --output-file coverage.info; fi
  - if [[ $TOOL == "coverage" ]]; then lcov --remove coverage.info '/opt/*' '/usr/*' --output-file coverage.info; fi
  - if [[ $TOOL == "coverage" ]]; then lcov --list coverage.info; fi
  - if [[ $TOOL == "coverage" ]]; then bash <(curl -s https://codecov.io/bash) || echo "No coverage reports"; fi
notifications:
  email: false
